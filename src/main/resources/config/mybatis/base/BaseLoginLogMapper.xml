<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yundao.tenant.mapper.base.BaseLoginLogMapper">
  <resultMap id="BaseResultMap" type="com.yundao.tenant.model.base.BaseLoginLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="login_account" jdbcType="VARCHAR" property="loginAccount" />
    <result column="user_account_id" jdbcType="BIGINT" property="userAccountId" />
    <result column="login_date" jdbcType="TIMESTAMP" property="loginDate" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="login_address" jdbcType="VARCHAR" property="loginAddress" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="params" jdbcType="VARCHAR" property="params" />
    <result column="result" jdbcType="TINYINT" property="result" />
    <result column="result_message" jdbcType="VARCHAR" property="resultMessage" />
    <result column="system_code" jdbcType="VARCHAR" property="systemCode" />
    <result column="login_type" jdbcType="TINYINT" property="loginType" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, tenant_id, login_account, user_account_id, login_date, login_ip, login_address, 
    model, params, result, result_message, system_code, login_type, version, create_date, 
    create_user_id, update_user_id, update_date, is_delete
  </sql>
  <select id="selectByExample" parameterType="com.yundao.tenant.model.base.BaseLoginLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from login_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit == null">
      <if test="limitStart gt 0 and limitEnd gt 0 ">
        limit ${limitStart} , ${limitEnd}
      </if>
      <if test="limitStart lt 1 and limitEnd lt 0 ">
        limit ${limitEnd}
      </if>
    </if>
    <if test="limit != null ">
      limit ${limit.start} , ${limit.size}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from login_log
    where id = #{id,jdbcType=BIGINT}
     AND is_delete=0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from login_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yundao.tenant.model.base.BaseLoginLogExample">
    delete from login_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.yundao.tenant.model.base.BaseLoginLog" useGeneratedKeys="true">
    insert into login_log (id, tenant_id, login_account, 
      user_account_id, login_date, login_ip, 
      login_address, model, params, 
      result, result_message, system_code, 
      login_type, version, create_date, 
      create_user_id, update_user_id, update_date, 
      is_delete)
    values (#{id,jdbcType=BIGINT}, #{tenantId,jdbcType=BIGINT}, #{loginAccount,jdbcType=VARCHAR}, 
      #{userAccountId,jdbcType=BIGINT}, #{loginDate,jdbcType=TIMESTAMP}, #{loginIp,jdbcType=VARCHAR}, 
      #{loginAddress,jdbcType=VARCHAR}, #{model,jdbcType=VARCHAR}, #{params,jdbcType=VARCHAR}, 
      #{result,jdbcType=TINYINT}, #{resultMessage,jdbcType=VARCHAR}, #{systemCode,jdbcType=VARCHAR}, 
      #{loginType,jdbcType=TINYINT}, #{version,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=BIGINT}, #{updateUserId,jdbcType=BIGINT}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{isDelete,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.yundao.tenant.model.base.BaseLoginLog" useGeneratedKeys="true">
    insert into login_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="loginAccount != null">
        login_account,
      </if>
      <if test="userAccountId != null">
        user_account_id,
      </if>
      <if test="loginDate != null">
        login_date,
      </if>
      <if test="loginIp != null">
        login_ip,
      </if>
      <if test="loginAddress != null">
        login_address,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="params != null">
        params,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="resultMessage != null">
        result_message,
      </if>
      <if test="systemCode != null">
        system_code,
      </if>
      <if test="loginType != null">
        login_type,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="loginAccount != null">
        #{loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="userAccountId != null">
        #{userAccountId,jdbcType=BIGINT},
      </if>
      <if test="loginDate != null">
        #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginAddress != null">
        #{loginAddress,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="params != null">
        #{params,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        #{result,jdbcType=TINYINT},
      </if>
      <if test="resultMessage != null">
        #{resultMessage,jdbcType=VARCHAR},
      </if>
      <if test="systemCode != null">
        #{systemCode,jdbcType=VARCHAR},
      </if>
      <if test="loginType != null">
        #{loginType,jdbcType=TINYINT},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yundao.tenant.model.base.BaseLoginLogExample" resultType="java.lang.Integer">
    select count(*) from login_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update login_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.tenantId != null">
        tenant_id = #{record.tenantId,jdbcType=BIGINT},
      </if>
      <if test="record.loginAccount != null">
        login_account = #{record.loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.userAccountId != null">
        user_account_id = #{record.userAccountId,jdbcType=BIGINT},
      </if>
      <if test="record.loginDate != null">
        login_date = #{record.loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginIp != null">
        login_ip = #{record.loginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.loginAddress != null">
        login_address = #{record.loginAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.model != null">
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.params != null">
        params = #{record.params,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null">
        result = #{record.result,jdbcType=TINYINT},
      </if>
      <if test="record.resultMessage != null">
        result_message = #{record.resultMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.systemCode != null">
        system_code = #{record.systemCode,jdbcType=VARCHAR},
      </if>
      <if test="record.loginType != null">
        login_type = #{record.loginType,jdbcType=TINYINT},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=BIGINT},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update login_log
    set id = #{record.id,jdbcType=BIGINT},
      tenant_id = #{record.tenantId,jdbcType=BIGINT},
      login_account = #{record.loginAccount,jdbcType=VARCHAR},
      user_account_id = #{record.userAccountId,jdbcType=BIGINT},
      login_date = #{record.loginDate,jdbcType=TIMESTAMP},
      login_ip = #{record.loginIp,jdbcType=VARCHAR},
      login_address = #{record.loginAddress,jdbcType=VARCHAR},
      model = #{record.model,jdbcType=VARCHAR},
      params = #{record.params,jdbcType=VARCHAR},
      result = #{record.result,jdbcType=TINYINT},
      result_message = #{record.resultMessage,jdbcType=VARCHAR},
      system_code = #{record.systemCode,jdbcType=VARCHAR},
      login_type = #{record.loginType,jdbcType=TINYINT},
      version = #{record.version,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=BIGINT},
      update_user_id = #{record.updateUserId,jdbcType=BIGINT},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      is_delete = #{record.isDelete,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yundao.tenant.model.base.BaseLoginLog">
    update login_log
    <set>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="loginAccount != null">
        login_account = #{loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="userAccountId != null">
        user_account_id = #{userAccountId,jdbcType=BIGINT},
      </if>
      <if test="loginDate != null">
        login_date = #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="loginIp != null">
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginAddress != null">
        login_address = #{loginAddress,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="params != null">
        params = #{params,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=TINYINT},
      </if>
      <if test="resultMessage != null">
        result_message = #{resultMessage,jdbcType=VARCHAR},
      </if>
      <if test="systemCode != null">
        system_code = #{systemCode,jdbcType=VARCHAR},
      </if>
      <if test="loginType != null">
        login_type = #{loginType,jdbcType=TINYINT},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yundao.tenant.model.base.BaseLoginLog">
    update login_log
    set tenant_id = #{tenantId,jdbcType=BIGINT},
      login_account = #{loginAccount,jdbcType=VARCHAR},
      user_account_id = #{userAccountId,jdbcType=BIGINT},
      login_date = #{loginDate,jdbcType=TIMESTAMP},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      login_address = #{loginAddress,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      params = #{params,jdbcType=VARCHAR},
      result = #{result,jdbcType=TINYINT},
      result_message = #{resultMessage,jdbcType=VARCHAR},
      system_code = #{systemCode,jdbcType=VARCHAR},
      login_type = #{loginType,jdbcType=TINYINT},
      version = #{version,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOne" parameterType="com.yundao.tenant.model.base.BaseLoginLogExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from login_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
     limit 1
  </select>
</mapper>